ActiveAdmin.register Invoice do
  index do
    column :id do |invoice|
      link_to invoice.id.to_s, "/clientarea/invoices/"+ invoice.id.to_s
    end
    column :created_at
    column :updated_at
    column :invoice_number
    column :due_date


    default_actions

  end
  member_action :print_invoice do
    @invoice = Invoice.find(params[:id])
    respond_to do |format|
      format.html
      format.pdf {
        if Rails.env == 'production'
          require 'wkhtmltopdf-heroku'
          render :pdf => "print_invoice", :disable_smart_shrinking => false,
                 :template => 'clientarea/invoices/print_invoice.html.erb', :layout => false,
                 :header => {:font_size => '8', :right => '[page] of [toPage]'},
                 :footer => {:font_size => '8', :right => 'Generated by constructionsupport.co.uk'}
        else
          render :pdf => "print_invoice", :disable_smart_shrinking => false,
                 :template => 'clientarea/invoices/print_invoice.html.erb', :layout => false,
                 :wkhtmltopdf => 'C:\Program Files (x86)\wkhtmltopdf\wkhtmltopdf.exe',
                 :header => {:font_size => '8', :right => '[page] of [toPage]'},
                 :footer => {:font_size => '8', :right => 'Generated by constructionsupport.co.uk'}
        end
      }
    end
  end
  member_action :email_invoice,

                :only => :show do
    @invoice = Invoice.find(params[:id])
    require 'wkhtmltopdf-heroku'
    pdf = render_to_string :pdf => "print_invoice", :disable_smart_shrinking => false,
                           :template => 'clientarea/invoices/print_invoice.html.erb', :layout => false,
                           :wkhtmltopdf => 'C:\Program Files (x86)\wkhtmltopdf\wkhtmltopdf.exe',
                           :header => {:font_size => '8', :right => '[page] of [toPage]'},
                           :footer => {:font_size => '8', :right => 'Generated by constructionsupport.co.uk'}

    CustomerMailer.email_invoice(@invoice,pdf).deliver
    redirect_to clientarea_invoice_path(flash[:notice] => "Email sent")
  end


  action_item :only => :show do
    link_to "Print invoice", print_invoice_clientarea_invoice_path(:format => :pdf)
  end
  action_item :only => :show do
    link_to "Send invoice by e-mail", email_invoice_clientarea_invoice_path
  end


  form do |f|

    f.inputs "Customer" do
      f.input :customer, :as => :select, :collection => Customer.where(:contact_id => current_contact.id)
      if f.object.new_record?
        f.input :invoice_number, :input_html => {:size => 2, :readonly => true, :value => "#{(Invoice.order('created_at desc').first || Invoice.new).invoice_number.to_i + 1}"},
                :label => 'Invoice number <a href="#" onclick="$(\'#invoice_invoice_number\').attr(\'readonly\',false);">change</a>'.html_safe
      else
        f.input :invoice_number, :input_html => {:size => 2, :readonly => true},
                :label => 'Invoice number <a href="#" onclick="$(\'#invoice_invoice_number\').attr(\'readonly\',false);">change</a>'.html_safe
      end
      f.input :due_date, :as => :radio, :collection => [["15 days", 15], ["30 days", 30], ["45 days",45],["60 days",60]]
      f.input :address_id,:label => "Bill To Address", :as => :select, :collection => current_contact.addresses
      f.input :ship_to_address_id, :label =>"Ship to Address", :as => :select, :collection => current_contact.addresses
    end



    f.has_many :invoice_items do |g|
      g.input :_destroy, :as => :boolean, :label => "Remove this Product" unless g.object.nil? or g.object.id.nil?
      g.input :product_name
      g.input :value
      g.input :quantity
      g.input :discount, :input_html => {:value => "0.00"}
      g.input :cis, :as => :boolean, :label => "CIS"
      g.input :vat, :as => :boolean, :label => "VAT"
    end

    f.actions
  end
  show do
    attributes_table do
      row :invoice_number
      row :customer
      row :due_date do |obj|
        obj.created_at + obj.due_date.day
      end
      row :created_at
      row :ship_to_address
      row :address



    end
    panel "Products" do
      table_for invoice.invoice_items do
        column :id, :width => 100
        column :product_name

        column :quantity
        column :discount
        column :cis do |obj|
          obj.cis? ? 'Yes' : 'No'
        end
        column :vat do |obj|
          obj.vat? ? 'Yes' : 'No'
        end
        column "Net value", :value
        column "VAT Value", :value do |obj|
          obj.vat? ? obj.value/5 : "0.00"
        end
        column "Gross", :value do |obj|
          obj.vat? ?  obj.value*6/5 : obj.value
        end

        column :created_at

      end
    end

  end
end